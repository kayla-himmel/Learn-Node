{"version":3,"sources":["webpack:///webpack/bootstrap 49451b157039c5de2707","webpack:///./public/javascripts/modules/bling.js","webpack:///./public/javascripts/modules/autocomplete.js","webpack:///./public/javascripts/delicious-app.js"],"names":["$","document","querySelector","bind","$$","querySelectorAll","Node","prototype","on","window","name","fn","addEventListener","NodeList","__proto__","Array","forEach","elem","autocomplete","input","latInput","lngInput","dropdown","google","maps","places","Autocomplete","addListener","place","getPlace","value","geometry","location","lat","lng","e","keyCode","preventDefault"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AChEA;;AAEA,IAAMA,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAV;AACA,IAAMG,KAAKH,SAASI,gBAAT,CAA0BF,IAA1B,CAA+BF,QAA/B,CAAX;;AAEAK,KAAKC,SAAL,CAAeC,EAAf,GAAoBC,OAAOD,EAAP,GAAY,UAAUE,IAAV,EAAgBC,EAAhB,EAAoB;AAClD,OAAKC,gBAAL,CAAsBF,IAAtB,EAA4BC,EAA5B;AACD,CAFD;;AAIAE,SAASN,SAAT,CAAmBO,SAAnB,GAA+BC,MAAMR,SAArC,C,CAAgD;;AAEhDM,SAASN,SAAT,CAAmBC,EAAnB,GAAwBK,SAASN,SAAT,CAAmBK,gBAAnB,GAAsC,UAAUF,IAAV,EAAgBC,EAAhB,EAAoB;AAChF,OAAKK,OAAL,CAAa,UAACC,IAAD,EAAU;AACrBA,SAAKT,EAAL,CAAQE,IAAR,EAAcC,EAAd;AACD,GAFD;AAGD,CAJD;;QAMSX,C,GAAAA,C;QAAGI,E,GAAAA,E;;;;;;;;;;;;;;;;;;;;ACjBZ,SAASc,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,QAAvC,EAAiD;AAC/C,MAAG,CAACF,KAAJ,EAAW,OADoC,CAC5B;AACnB,MAAMG,WAAW,IAAIC,OAAOC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAAoCP,KAApC,CAAjB;;AAEAG,WAASK,WAAT,CAAqB,eAArB,EAAsC,YAAM;AAC1C,QAAMC,QAAQN,SAASO,QAAT,EAAd;AACA;AACAT,aAASU,KAAT,GAAiBF,MAAMG,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EAAjB;AACA;AACAZ,aAASS,KAAT,GAAiBF,MAAMG,QAAN,CAAeC,QAAf,CAAwBE,GAAxB,EAAjB;AACD,GAND;AAOA;AACAf,QAAMX,EAAN,CAAS,SAAT,EAAoB,UAAC2B,CAAD,EAAO;AACzB,QAAIA,EAAEC,OAAF,KAAc,EAAlB,EAAsBD,EAAEE,cAAF;AACvB,GAFD;AAGD;;kBAEcnB,Y;;AAEf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;;;;;AC1FA;;AACA;;AACA;;;;;;AACA;AACA;;AAEA,4BAAc,cAAE,UAAF,CAAd,EAA6B,cAAE,MAAF,CAA7B,EAAwC,cAAE,MAAF,CAAxC;;AAEA;;AAEA,4B","file":"App.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 49451b157039c5de2707","// based on https://gist.github.com/paulirish/12fb951a8b893a454b32\n\nconst $ = document.querySelector.bind(document);\nconst $$ = document.querySelectorAll.bind(document);\n\nNode.prototype.on = window.on = function (name, fn) {\n  this.addEventListener(name, fn);\n};\n\nNodeList.prototype.__proto__ = Array.prototype; // eslint-disable-line\n\nNodeList.prototype.on = NodeList.prototype.addEventListener = function (name, fn) {\n  this.forEach((elem) => {\n    elem.on(name, fn);\n  });\n};\n\nexport { $, $$ };\n\n\n\n// WEBPACK FOOTER //\n// ./public/javascripts/modules/bling.js","function autocomplete(input, latInput, lngInput) {\n  if(!input) return; // skip this fn from running if there is not input on the page\n  const dropdown = new google.maps.places.Autocomplete(input);\n\n  dropdown.addListener('place_changed', () => {\n    const place = dropdown.getPlace();\n    // sets the lat value in the lat input of the Add Store form\n    latInput.value = place.geometry.location.lat();\n    // sets the lng value in the lng input of the Add Store form \n    lngInput.value = place.geometry.location.lng();\n  });\n  // if someone hits enter (keycode 13) on the address field, don't submit the form\n  input.on('keydown', (e) => {\n    if (e.keyCode === 13) e.preventDefault();\n  });\n}\n\nexport default autocomplete;\n\n// FAILED ATTEMPT TO GET GEOSEARCH TO WORK AS AUTOCOMPLETE IN LEAFLET\n// // import L from 'leaflet';\n// import { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n\n// const myProvider = new OpenStreetMapProvider();\n// const map = L.map('#mapstores').setView([51.505, -0.09], 13);\n\n// // renders the search button on the map\n// const searchControl = new GeoSearchControl({\n//   provider: myProvider, // required\n//   style: 'bar', // optional: bar|button - default button\n// }).addTo(map);\n\n// // configures the autocomplete for the search button\n// const autocompleteSearch = new GeoSearchControl({\n//   provider: myProvider, // required\n//   autoComplete: true, // optional: true|false - default true\n//   autoCompleteDelay: 250, // optional: number - default 250\n// }).addTo(map);\n\n// // show the autocomplete search results\n// const showMarker = new GeoSearchControl({\n//   provider: myProvider, // required\n//   showMarker: true, // optional: true|false - default true\n//   showPopup: false, // optional: true|false - default false\n//   marker: {\n//     // optional: L.Marker - default L.Icon.Default\n//     icon: new L.Icon.Default(),\n//     draggable: false,\n//   },\n//   popupFormat: ({ query, result }) => result.label, // optional: function - default returns result label\n//   maxMarkers: 1, // optional: number - default 1\n//   retainZoomLevel: false, // optional: true|false - default false\n//   animateZoom: true, // optional: true|false - default true\n//   autoClose: false, // optional: true|false - default false\n//   searchLabel: 'Enter address', // optional: string - default 'Enter address'\n//   keepResult: false, // optional: true|false - default false\n//   updateMap: true, // optional: true|false - default true\n// });\n\n// // show marker on map when a location is chosen from the autocomplete search\n// map.on('geosearch/showlocation', yourEventHandler);\n\n\n\n\n// function autocomplete(map) {\n//   if(!input) return;\n\n//   const search = new GeoSearch.GeoSearchControl({\n//     provider: new GeoSearch.OpenStreetMapProvider(),\n//   });\n\n//   storesMap.addControl(search);\n\n//   // TUTORIAL CODE FOR GOOGLE MAPS\n//   // if(!input) return; // skip this fn from running if there is not input on the page\n//   // // const dropdown = new google.maps.places.Autocomplete(input);\n//   // const provider = new GeoSearch.OpenStreetMapProvider();\n\n//   // dropdown.addListener('place_changed', () => {\n//   //   const place = dropdown.getPlace();\n//   //   latInput.value = place.geometry.location.lat();\n//   //   lngInput.value = place.geometry.location.lng();\n//   // });\n//   // // if someone hits enter on the address field, don't submit the form\n//   // input.on('keydown', (e) => {\n//   //   if (e.keyCode === 13) e.preventDefault();\n//   // });\n// }\n\n// export default autocomplete;\n\n\n\n// WEBPACK FOOTER //\n// ./public/javascripts/modules/autocomplete.js","import '../sass/styleNew.css';\nimport { $ } from './modules/bling';\nimport autocomplete from './modules/autocomplete';\n// import typeAhead from './modules/typeAhead';\n// import createMap from './modules/map';\n\nautocomplete( $('#address'), $('#lat'), $('#lng') );\n\n// typeAhead( $('.search' ) );\n\n// createMap( $('#mapid') );\n\n\n\n// WEBPACK FOOTER //\n// ./public/javascripts/delicious-app.js"],"sourceRoot":""}